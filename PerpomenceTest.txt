SELECT public.proc_create_range_partitions(:p_date);


delete  from rm_log where pt_dt > '20220303000000';
commit;
select * from rm_log where pt_dt > '20220303000000' order by pt_dt desc limit 200;
select count(*) from rm_log where pt_dt > '20220303000000' ;

select
	sttdt, enddt, enddt - sttdt as diff, cnt
from
(
	select min(insert_dt) as sttdt, max(insert_dt) as enddt, count(*) as cnt from rm_log where pt_dt > '20220303000000'
) A
;

select min(insert_dt) as stt, max(insert_dt) as end from rm_log where pt_dt > '20220303000000' ;



--select * from pg_settings where name = 'max_connections'

메세지 사이즈에 따라 초당 수신할수 있는 전문 개수를 고려하여 listen thread 수를 고려하고
db처리 성능은 초당 insert 가능 건수를 고려하여 적절하게 db thread수와 commit cnt를 조정

DB 입력을 위한 처리 작업에 걸리는 시간에 따라 초당 건수를 계산하여 commit cnt를 구성하고 적절한 db proc thread수를 산정한다.
DB POOL은 proc thread수의 최소 10% 정도의 여유를 둔다.


listen thread, db thread, threadpool, commit cnt, 시간 ,                         건수(아마 id가 같은게 있어서 일부는 업데이트 된듯)

-- 2  5-20  40   1000 2022-03-03 07:44:50	2022-03-03 07:46:47	00:01:57.534	100000
-- 4  5-20  85   1000 2022-03-03 07:50:51	2022-03-03 07:51:41	00:00:50.048	100497
-- 10 5-20  85   1000 2022-03-03 07:53:42	2022-03-03 07:55:29	00:01:47.131	100000
-- 4  20-40 85   1000 2022-03-03 07:57:38	2022-03-03 07:59:30	00:01:52.843	99914
-- 3  30-30 35   1000 2022-03-03 08:04:26	2022-03-03 08:05:02	00:00:35.518	99462
-- 2  30-30 35   1000
-- 2  30-30 35   500  2022-03-03 08:10:23	2022-03-03 08:10:40	00:00:17.675	100000
-- 4  30-30 35   500  2022-03-03 08:11:42	2022-03-03 08:12:03	00:00:20.357	99390
-- 3  30-30 35   500  2022-03-03 08:13:44	2022-03-03 08:13:59	00:00:15.627	99630
-- 3  30-30 35   500  2022-03-03 08:38:31	2022-03-03 08:39:21	00:00:49.635	99907
--					  2022-03-03 08:40:10	2022-03-03 08:40:59	00:00:48.553	99661
-- 3  30-30 45   500  2022-03-03 08:42:10	2022-03-03 08:42:49	00:00:38.953	99361
-- 3  30-30 60   500  2022-03-03 08:43:57	2022-03-03 08:44:49	00:00:52.476	99743


-- 3  30-30 50   500  2022-03-03 08:20:28	2022-03-03 08:20:53	00:00:24.504	99764
-- 3  20-20 30   500  2022-03-03 08:34:54	2022-03-03 08:35:44	00:00:49.622	99238



-- 30  30-30 35  500  2022-03-03 08:26:15	2022-03-03 08:27:06	00:00:51.259	97702
-- 30  60-60 70  500  2022-03-03 08:28:54	2022-03-03 08:29:38	00:00:44.034	99088
-- 5   60-60 70  500  2022-03-03 08:32:03	2022-03-03 08:32:54	00:00:50.905	99513



-- 3  30-30 35   200  2022-03-03 08:16:59	2022-03-03 08:17:22	00:00:23.441	99699